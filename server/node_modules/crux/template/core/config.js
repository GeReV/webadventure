
var fs = require('fs');

var store = { };

module.exports.load = function(name, forceFresh, after) {
	if (typeof forceFresh === 'function') {
		after = forceFresh;
		forceFresh = false;
	}
	if (forceFresh || ! store[name]) {
		lookup(name, after);
	} else {
		setTimeout(after, 0);
	}
};

module.exports.loadSync = function(name, forceFresh) {
	if (forceFresh || ! store[name]) {
		lookupSync(name);
	}
};

module.exports.item = function(item) {
	var current = store;
	item = item.split('.');
	for (var i = 0, c = item.length; i < c; i++) {
		try {
			current = current[item[i]];
		} catch(e) {
			break;
		}
	}
	return current;
};

function lookup(name, after) {
	$.log.verbose.message('Looking up config file "' + name + '"');
	var file = $.CONFIG_PATH + name + $.CONFIG_EXT;
	fs.readFile(file, function(err, data) {
		if (err) {throw err;}
		store[name] = jsonParse(data.toString());
		if (typeof after === 'function') {after();}
	});
}

function lookupSync(name) {
	$.log.verbose.message('Looking up config file "' + name + '"');
	var file = $.CONFIG_PATH + name + $.CONFIG_EXT;
	store[name] = jsonParse(
		fs.readFileSync(file).toString()
	);
}

function jsonParse(string) {
	string = string.split('\n');
	for (var i = 0, c = string.length; i < c; i++) {
		string[i] = string[i].trim();
		if (string[i].substring(0, 2) === '//') {
			string[i] = '';
		}
	}
	return JSON.parse(string.join('\n'));
}

/* End of file config.js */
/* Location: ./core/config.js */
