/**
 * The MySQL database engine
 */

var mysql = require('mysql');
var Class = require('classes').Class;

var DatabaseEngine = require('../db-engine').DatabaseEngine;

Class([module.exports, 'Engine']).extends(DatabaseEngine, {
	
	_client: null,
	
	/**
	 * Constructor
	 *
	 * @access  public
	 * @param   object    options { user, password, host, port, database }
	 */
	construct: function(options) {
		this._client = mysql.createClient(options);
	},
	
	/**
	 * Send a query
	 *
	 * @access  public
	 * @param   string    the query
	 * @param   array     values to replace in the query
	 * @param   function  callback
	 * @return  void
	 */
	query: function(query, params, callback) {
		var args = Array.prototype.slice.call(arguments);
		var callback = (typeof args[args.length - 1] === 'function') ? args.pop() : null;
		args.push(function(err, result) {
			callback.call(this, err, result, query);
		});
		this._client.query.apply(this._client, args);
	},
	
	/**
	 * Gracefully close the database connection after issuing any remaining queries
	 *
	 * @access  public
	 * @param   function  callback
	 * @return  void
	 */
	close: function(callback) {
		this._client.end(callback);
	},
	
// ------------------------------------------------------------------
//  Query result parsers
	
	_showDatabases: function(result) {
		var dbs = [ ];
		result.forEach(function(db) {
			dbs.push(db.Database);
		});
		return dbs;
	},
	
	_showTablesIn: function(result) {
		var tables = [ ];
		var property = (function() {
			if (result && result[0]) {
				// It should be the only property on the object
				for (var i in result[0]) {
					if (result[0].hasOwnProperty(i)) {
						return i;
					}
				}
			}
		}());
		if (property) {
			result.forEach(function(result) {
				tables.push(result[property]);
			});
		}
		return tables;
	}
	
});

/* End of file mysql.js */
/* Location: ./libraries/db/engines/mysql.js */
